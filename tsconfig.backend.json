{
  "compilerOptions": {
    "target": "ES2022", // Target a modern ECMAScript version supported by your Node.js runtime
    "module": "NodeNext", // Use Node.js's native ES module resolution (or "CommonJS" if preferred)
    "moduleResolution": "NodeNext", // How modules are resolved (Node.js style)
    "outDir": "./dist-backend", // Output compiled JavaScript to a dedicated 'dist-backend' folder
    "rootDir": "./", // Specify the root directory of your source files
    "esModuleInterop": true, // Allows default imports from CommonJS modules (e.g., `import express from 'express'`)
    "allowSyntheticDefaultImports": true, // Allows default imports from modules with no default export
    "forceConsistentCasingInFileNames": true, // Enforce consistent casing in file names
    "strict": true, // Enable all strict type-checking options
    "skipLibCheck": true, // Skip type checking of all declaration files (*.d.ts)
    "resolveJsonModule": true, // Allow importing .json files
    "sourceMap": true, // Generate source maps for debugging
    "declaration": true, // Generate .d.ts files for type declarations
    "declarationMap": true, // Generate source maps for declaration files
    "composite": true, // Enable project references for faster builds in monorepos
    "incremental": true, // Enable incremental compilation for faster recompilations
    "noImplicitAny": true, // Raise error on expressions and declarations with an implied 'any' type
    "noUnusedLocals": true, // Report errors on unused local variables
    "noUnusedParameters": true, // Report errors on unused parameters
    "noFallthroughCasesInSwitch": true, // Report errors for fallthrough cases in switch statements
    "noEmitOnError": true, // Do not emit outputs if any errors are reported
    "isolatedModules": true // Ensure that each file can be safely transpiled without relying on other files
  },
  // Include server.ts and any other TypeScript files in a 'src' directory if you add one
  "include": [
    "server.ts",
    "src/**/*.ts" // This covers files like src/routes/api.ts, src/utils/helpers.ts, etc.
  ],
  // Exclude node_modules, frontend build output, and frontend source
  "exclude": [
    "node_modules",
    "dist", // Your frontend's build output
    "src"   // Your frontend's source directory, if it's separate from backend src
  ]
}

